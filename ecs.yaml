AWSTemplateFormatVersion: '2010-09-09'
Description: ecs


Parameters:
  VPCId:
    Type: String
  ECSSubnet1:
    Type: String
  ECSSubnet2:
    Type: String
  LoadBalancerSecurityGroup:
    Type: String
  LoadBalancerName:
    Type: String
  LoadBalancerListener:
    Type: String
  CognitoUserPoolArn: 
    Type: String
  UserPoolClientId:
    Type: String
  UserPoolDomainName:
    Type: String
  DomainName:
    Type: String
  SubDomainName:
    Type: String
  ECSClusterArn:
    Type: String


Resources:

  DefaultTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: ECS-Cluster-TG
      TargetType: ip
      VpcId:  
        Fn::ImportValue:
          !Sub "${VPCId}"  
      Protocol: 'HTTP'
      Port: '80'  

  LoadBalancerCognitoRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties: 
      Priority: 20
      ListenerArn: 
        Fn::ImportValue:
          !Sub "${LoadBalancerListener}"
      Actions: 
        - Type: authenticate-cognito
          Order: 1
          AuthenticateCognitoConfig:
            OnUnauthenticatedRequest: authenticate
            Scope: openid
            SessionCookieName: AWSELBAuthSessionCookie
            UserPoolArn: 
              Fn::ImportValue:
                !Sub "${CognitoUserPoolArn}"   
            UserPoolClientId: 
              Fn::ImportValue:
                !Sub "${UserPoolClientId}"  
            UserPoolDomain: 
              Fn::ImportValue:
                !Sub "${UserPoolDomainName}" 
        - Type: forward
          TargetGroupArn: !Ref DefaultTargetGroup
          Order: 2
      Conditions: 
        - Field: host-header
          HostHeaderConfig: 
            Values: 
              - !Sub ${SubDomainName}.${DomainName}
  

  ContainerSecurityGroup:
    Type: AWS::EC2::SecurityGroup      
    Properties:
     VpcId:  
      Fn::ImportValue:
        !Sub "${VPCId}"  
     GroupDescription: for ecs containers
     SecurityGroupIngress:
        - SourceSecurityGroupId: 
            Fn::ImportValue:
              !Sub "${LoadBalancerSecurityGroup}"   
          IpProtocol: -1

  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ecs-tasks.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
        - PolicyName: AmazonECSTaskExecutionRolePolicy
          PolicyDocument:
            Statement:
            - Effect: Allow
              Action:
                # ECS Tasks to download images from ECR
                - 'ecr:GetAuthorizationToken'
                - 'ecr:BatchCheckLayerAvailability'
                - 'ecr:GetDownloadUrlForLayer'
                - 'ecr:BatchGetImage'
                # ECS tasks to upload logs to CloudWatch
                - 'logs:CreateLogStream'
                - 'logs:PutLogEvents'
              Resource: '*'

  Task:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: task-definition
      Cpu: 256
      Memory: 512
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRole
      ContainerDefinitions:
        - Name: service
          Image: stefanomonti02/simple-node-app:v1
          Cpu: 256
          Memory: 512
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp

  Service:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: service
      TaskDefinition: !Ref Task
      Cluster: 
        Fn::ImportValue:
          !Sub "${ECSClusterArn}"
      LaunchType: FARGATE
      DesiredCount: 1
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 70
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets:
            - Fn::ImportValue:
                !Sub "${ECSSubnet1}"   
            - Fn::ImportValue:
                !Sub "${ECSSubnet2}"   
          SecurityGroups: 
            - !Ref ContainerSecurityGroup
      LoadBalancers:
        - ContainerName: service
          ContainerPort: 80
          TargetGroupArn: !Ref DefaultTargetGroup